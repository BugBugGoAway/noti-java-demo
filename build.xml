<project name="GiztiwsNotiDemo" default="compile" basedir=".">

  <property name="app.name"      value="GiztiwsNoti"/>
  <property name="app.version"   value="0.1.0"/>
  <property name="app.path"      value="/${app.name}"/>
  <property name="build.home"    value="${basedir}/build"/>
  <property name="dist.home"     value="${basedir}/dist"/>
  <property name="lib.home"      value="${basedir}/lib"/>
  <property name="src.home"      value="${basedir}/src"/>
  <property name="class.home"    value="${build.home}/classes"/>

  <path id="compile.classpath">
    <fileset dir="${lib.home}">
      <include name="*.jar"/>
    </fileset>
  </path>
  
  <property name="compile.debug"       value="true"/>
  <property name="compile.deprecation" value="false"/>


<!-- ==================== All Target ====================================== -->

  <target name="all" depends="clean,compile"
   description="Clean build and dist directories, then compile"/>

  <target name="clean"
   description="Delete old build and dist directories">
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>


  <target name="compile" depends="prepare"
   description="Compile Java sources">

    <!-- Compile Java classes as necessary -->        
    <javac srcdir="${src.home}"
          destdir="${build.home}/classes"
            debug="${compile.debug}"
      deprecation="${compile.deprecation}"
         encoding="UTF-8"
includeAntRuntime="false">
        <classpath refid="compile.classpath"/>
        <compilerarg value="-Xlint"/>
        <compilerarg value="-Xdiags:verbose"/>
    </javac>
    
    <!-- Copy config file -->
    <copy file="${src.home}/main/resources/log4j2.xml" 
        tofile="${build.home}/classes/log4j2.xml" overwrite="true" force="true" />        

    <!-- Copy application resources -->
    <copy  todir="${build.home}/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>
    
  </target>


  <pathconvert property="libs" pathsep=" ">
      <mapper>
          <chainedmapper>
              <flattenmapper />
              <globmapper from="*" to="lib/*" />
          </chainedmapper>
      </mapper>
      <fileset dir="${lib.home}">
          <include name="*.jar" />
      </fileset>
  </pathconvert>
          
  <target name="dist" depends="compile" description="Create binary distribution">
    <!-- Create application JAR file -->
    <jar jarfile="${dist.home}/${app.name}-${app.version}.jar"
         basedir="${build.home}" excludes="test">
         <fileset dir="${bin}" >  
             <include name="**/*.class" />   
         </fileset> 
         <manifest>
             <attribute name="Main-Class" value="com.gizwits.platform.notidemo.GizwitsNoti"/>
             <attribute name="Class-Path" value="${libs}"/>
         </manifest>
    </jar>         
    <!-- Copy additional files to ${dist.home} as necessary -->
  </target>

  <target name="prepare">

    <!-- Create build directories as needed -->
    <mkdir  dir="${build.home}"/>
    <mkdir  dir="${build.home}/classes"/>

    <!-- Copy external dependencies as required -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
    <mkdir  dir="${build.home}/lib"/>
<!--
    <copy todir="${build.home}/WEB-INF/lib" file="${foo.jar}"/>
-->

    <!-- Copy static files from external dependencies as needed -->
    <!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->

  </target>


</project>
